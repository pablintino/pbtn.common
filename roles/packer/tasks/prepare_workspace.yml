---
- name: Template the passed packer variable files
  vars:
    _pbi_packer_var_file_abs: >-
      {{
        (item is abs) |
        ternary(
          item,
          [_pbi_packer_base_run_dir, item] | path_join
        )
      }}
  ansible.builtin.template:
    src: "{{ _pbi_packer_var_file_abs }}"
    dest: "{{ _pbi_packer_var_file_abs | regex_replace('\\.j2$', '') }}"
    mode: '0644'
  loop: >-
    {{
      pbi_packer_variable_files | default([]) |
      select('regex_search', '\\.j2$')
    }}

- name: Fetch the jinja files under the template path
  when: _pbi_packer_template_stat.stat.isdir
  ansible.builtin.find:
    paths: "{{ _pbi_packer_template_stat.stat.path }}"
    patterns: '*.j2'
  register: _pbi_packer_template_jinja_find

- name: Template the packer template if required
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "{{ item | regex_replace('\\.j2$', '') }}"
    mode: "0644"
  loop: >-
    {{
      (
        (
          _pbi_packer_template_jinja_find.files |
          default([]) |
          map(attribute='path')
        ) if _pbi_packer_template_stat.stat.isdir else
        [_pbi_packer_template_stat.stat.path]
      ) | select('search', '\.j2$')
    }}

- name: Try fetch the build name
  ansible.builtin.command:
    cmd: >-
      {{ _pbi_packer_binary }}
      inspect
      {{
        pbi_packer_template_path | regex_replace('.j2$', '')
      }}
      -machine-readable
    chdir: "{{ _pbi_packer_base_run_dir }}"
  register: _pbi_packer_inspect_cmd_out
  changed_when: false
  failed_when: false

- name: Set reusable facts
  vars:
    _pbi_packer_vars_file_path: >-
      {{
        [
          _pbi_packer_base_run_dir,
          'pbi-packer-ansible-vars.pkrvars.hcl'
        ] | path_join
      }}
  ansible.builtin.set_fact:
    _pbi_packer_vars_file: "{{ _pbi_packer_vars_file_path }}"
    _pbi_packer_template_path_sanitized: >-
      {{
        (
          '.' if
            (
              _pbi_packer_base_run_dir | trim("/") ==
              _pbi_packer_template_stat.stat.path | trim("/")
            ) else _pbi_packer_template_stat.stat.path
        )
        if _pbi_packer_template_stat.stat.isdir else
        (_pbi_packer_template_stat.stat.path | regex_replace('.j2$', ''))
      }}
    _pbi_packer_variable_files_sanitized: >-
      {{
        (
          pbi_packer_variable_files | default([]) |
          map('regex_replace', '\.j2$', '') | list
        ) +
        (
          [_pbi_packer_vars_file_path]
          if (pbi_packer_vars | default({}) | length > 0) else []
        )
      }}
    _pbi_packer_build_name: >-
      {{
        (
          _pbi_packer_inspect_cmd_out.stdout |
          regex_findall('builds:\s*(\\n)*\s*>?\s*(.+?(?=:))')
        ) | first | default([]) | last | default('')
      }}

- name: Generate variable file if required
  when: pbi_packer_vars | default({}) | length > 0
  ansible.builtin.copy:
    content: |-
      {% for elem, val in pbi_packer_vars.items() %}
      {{ elem }} = "{{ val | string | trim('"') | trim("'") }}"
      {% endfor %}
    dest: "{{ _pbi_packer_vars_file }}"
    mode: "0600"
